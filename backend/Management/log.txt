26/07/20
Created Gradle project with Spring Assistant
Put Project on GitHub
Created Management directory for log and todos
Created basic classes (users, course, application)

01/08/20
Created CourseFactory / CourseManager Class
Designed Tests and create Test classes
Created UniversityDao Interface
Added not applied status application status
Added application factory application generator method
Added Locator class in utils
Removed universityId from application as it can be accessed through course
Decided to not to test driven development because it's too confusing for now, will add tests later however
Created ApplicationManager methods
Created ApplicationFactory methods & small changes
Created CourseFactory methods
Created CourseManager methods

Added Database support, spring data & mysql
Added application.properties such that it fetches credentials from environment variables for security
Un-Abstracted the User class for now because I couldn't instantiate it from a json from postman - however got users to be able to be saved to database!

04/08/20
Added University and Students in database, in the same user table
Removed active registered courses as courses are just saved within University for now
Removed possibility to add abstract user, now will have to be student, admin or university
Added Student and University service, and changed User controller to Users Controller that calls the student, uni, user and admin services
Added SpecificUserService to try to make it generic and use that instead of specific services for each user category
Fixed the main branch where the commits were all over the place and got the user issue to be finally fixed
Changed the objects package to course which makes more sense

13/08/20
Added generic methods to SpecificUserService renamed to User service after refactoring to handle all users

until 28/08/20
Learned angular and starting to look into backend

31/08/20
Worked on basics of front end and getting connection to spring boot
Added HttpClient module to FE
Spring Boot didn't accept my rest calls so had to add CrossOrigins to UsersController
Got basic connection from angular to spring
Created basic display of users or single user on angular

Changed the file system so there's a clear frontend and a clear backend
Made basic website layout plan
Setup and add routing for basic header, home and search pages

04/09/20
Created Course page, configuring router parameters to pass in inputs for courseName and going back a page using Location
Added User, Authentication & profile Components, configuring routing for it
Added User class to UserComponent
Added User Authentication Service
Looking into how I will manager users, need to finish the basic layout first next time before continuing this however

06/09/20
Briefly stopping working on creating accounts to finish front end
Created UniversityPageComponent and made the search toggle between uni and course
Added more to Login page with toggle for login, register / uni, student
Working on backend by learning Spring Security

07/09/20
Changes to Security Configuration
New MyUserDetailsService, MyUserDetails, changes to UserDao, addition of @EnableJPARepositories to main
Implementing JWT authorisation
Added jjwt dependency
Implemented jwt token creation
created api authorization call
created and added request filter to look for jwt token

08/09/20
The generic User service is a bit to complex for no reason so: (in the end not really as written below)
- wanted to make separate student and uni daos and services for now
- changed, no separate daos, easier for userdetailsservice to access one dao
- same with services, it is easier in the end to have one service for users and later address different users' needs
Polished controller with fewer apis for now
Separated Authentication Controller form UsersController
Added Admin creation
Added an Admin in the system
Fixed issue with getting a specific user cause there was an issue with checking the class of the retrieved user
Removed "active" from users cause I didn't see the use for now
Added in an admin for now

10/09/20
Split UsersController into Users, Admin and Registration Controllers and added Registration Service
Added registration utils, first method inside is to check if a user has given the correct info for registration
Removed Student and Uni Id for now, setting up registration
Removed Locator as it all pretty much had to be reimplemented, will implement when needed
Finished registration and tested it, also added denial of all requests with antMatcher (**)

12/09/20
Removed Registration controller, all auth will be in auth controller, changed the api urls
Working on log in and logout on FE and BE -> can now login and register from FE, users get registered to BE

13/09/20
Add interceptor on FE to add jwt token in authorization header
Setup login logout FE
Add basic fetch data for uni and student when logged in

19/09/20
Setting up courses front end

21/09/20
Continuing setting up courses front end
Working on setting up courses back end, Course dao, service, controller
Removed course manager and factory and their tests
Universities can add courses BE, must be same uni that's authenticated
Had to change courses to reference university id not actual university instance